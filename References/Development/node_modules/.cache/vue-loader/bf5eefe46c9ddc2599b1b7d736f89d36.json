{"remainingRequest":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\src\\components\\fileUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\src\\components\\fileUploader.vue","mtime":1562480417732},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562146397036},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1562146396749},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1562146406048},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562146397036},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\Development\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1562146405880}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport loader from './loader';\nimport transferStatus from './transferStatus'\nexport default {\n  name: 'fileUploader',\n  data () {\n    return {\n      xval: false,\n      file:'',\n      loadstat:{\n        'title':\"Transmission in Progress\",\n        'stat':false,\n        'color':'green darken-2'\n      },\n      responseval:{\n        active:false,\n        status:\"\",\n        success:false,\n        reason:\"\"\n      }\n    }\n  },\n\n  components : {\n    loader,\n    transferStatus\n  },\n\n  methods : {\n    handleFileUpload(){\n      this.file = this.$refs.file.files[0]\n    },\n    beginTransfer(){\n      this.xval=false\n      this.loadstat.stat=true\n      let ldst=this.loadstat\n      let responseval=this.responseval\n      let formData = new FormData();\n      formData.append('filetoupload', this.file);\n      axios.post( 'http://localhost:30000/transmit',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function(response) {\n        ldst.stat=false\n        responseval=response.data\n        responseval.active=true\n        }).catch(function(){\n        ldst.stat=false\n        responseval.status=\"Transmission Failed\"\n        responseval.active=true\n        responseval.success=false\n        responseval.reason=\"Either the Server is closed or File sent is damaged.\"\n        responseval.type='T!'\n        });\n    }\n  }\n}\n",{"version":3,"sources":["fileUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fileUploader.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-layout row justify-center>\r\n    <v-btn fab dark color=\"green darken-4\" @click.stop=\"xval = true\">\r\n      <v-icon>cloud_upload</v-icon>\r\n    </v-btn>\r\n    <v-dialog v-model=\"xval\" persistent dark max-width=\"600\">\r\n      <v-card dark>\r\n        <v-card-title>\r\n          <span class=\"headline\">Transmission Panel</span>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <v-container grid-list-md>\r\n            <v-layout wrap>\r\n              <v-flex>\r\n                <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\r\n              </v-flex>\r\n            </v-layout>\r\n          </v-container>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn color=\"lime darken-2\" flat @click=\"xval = false\">Cancel</v-btn>\r\n          <v-btn color=\"lime darken-2\" flat @click=\"beginTransfer\">Begin Transmission</v-btn>\r\n          <loader :dispdata=\"loadstat.title\" :dialog=\"loadstat.stat\" :color=\"loadstat.color\"/>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n    <transferStatus :dataset=\"responseval\"/>\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\n  import axios from \"axios\";\r\n  import loader from './loader';\r\n  import transferStatus from './transferStatus'\r\n  export default {\r\n    name: 'fileUploader',\r\n    data () {\r\n      return {\r\n        xval: false,\r\n        file:'',\r\n        loadstat:{\r\n          'title':\"Transmission in Progress\",\r\n          'stat':false,\r\n          'color':'green darken-2'\r\n        },\r\n        responseval:{\r\n          active:false,\r\n          status:\"\",\r\n          success:false,\r\n          reason:\"\"\r\n        }\r\n      }\r\n    },\r\n\r\n    components : {\r\n      loader,\r\n      transferStatus\r\n    },\r\n\r\n    methods : {\r\n      handleFileUpload(){\r\n        this.file = this.$refs.file.files[0]\r\n      },\r\n      beginTransfer(){\r\n        this.xval=false\r\n        this.loadstat.stat=true\r\n        let ldst=this.loadstat\r\n        let responseval=this.responseval\r\n        let formData = new FormData();\r\n        formData.append('filetoupload', this.file);\r\n        axios.post( 'http://localhost:30000/transmit',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        }).then(function(response) {\r\n          ldst.stat=false\r\n          responseval=response.data\r\n          responseval.active=true\r\n          }).catch(function(){\r\n          ldst.stat=false\r\n          responseval.status=\"Transmission Failed\"\r\n          responseval.active=true\r\n          responseval.success=false\r\n          responseval.reason=\"Either the Server is closed or File sent is damaged.\"\r\n          responseval.type='T!'\r\n          });\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}