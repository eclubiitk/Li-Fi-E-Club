{"remainingRequest":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\src\\components\\dataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\src\\components\\dataTable.vue","mtime":1562132034432},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from \"vuex\";\nimport processor from \"./processor\";\nexport default {\n  data: () => ({\n    dialog: false,\n    headers: [\n      {\n        text: 'Ports',\n        align: 'left',\n        value: 'name',\n        sortable: false\n      },\n      {\n          text: 'Port Name / Path',\n          value: 'value',\n          sortable: false\n      }\n    ],\n    editedIndex: -1,\n    editedItem: {\n      value: ''\n    },\n    defaultItem: {\n      name: '',\n      value: ''\n    }\n  }),\n\n  computed:{\n    ...mapGetters(['dataPorts', 'availPort', 'updateStatus']),\n    formTitle () {\n      return this.editedIndex === -1 ? 'New Item' : 'Edit Port'\n  }},\n\n  watch: {\n    dialog (val) {\n      val || this.close()\n    }\n  },\n\n  created () {\n    this.getPortdata();\n    this.getPortNumbers();\n  },\n\n  methods: {\n    ...mapActions([\"getPortdata\", \"getPortNumbers\", 'updatePortinfo']),\n\n    editItem (item) {\n      this.editedIndex = this.dataPorts.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    close () {\n      this.dialog = false\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n\n    save () {\n      if (this.editedIndex > -1) {\n        Object.assign(this.dataPorts[this.editedIndex], this.editedItem)\n      } else {\n        this.dataPorts.push(this.editedItem)\n      }\n      this.close()\n    }\n  },\n\n  components: {\n    processor\n  }\n}\n",{"version":3,"sources":["dataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"dataTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div style=\"padding-top:10%\">\r\n    <div style=\"text-align:center\">\r\n    </div>\r\n    <v-toolbar flat dark>\r\n      <v-toolbar-title>Device Data</v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n      <v-btn dark color=\"green darken-1\" @click=\"updatePortinfo()\" style=\"float:right\">Update Configuration</v-btn>\r\n      <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n        <v-card>\r\n          <v-card-title>\r\n            <span class=\"headline\">{{ formTitle }}</span>\r\n          </v-card-title>\r\n\r\n          <v-card-text>\r\n            <v-container grid-list-md>\r\n              <v-layout wrap>\r\n                <v-flex xs12 sm6 md6>\r\n                    <br/>\r\n                  <p label=\"Name\">{{ editedItem.name }}</p>\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md6>\r\n                  <v-overflow-btn editable :items=\"availPort\" label=\"Select port\" v-model=\"editedItem.value\" outline></v-overflow-btn>\r\n                </v-flex>\r\n              </v-layout>\r\n            </v-container>\r\n          </v-card-text>\r\n\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"blue darken-1\" flat @click=\"close\">Cancel</v-btn>\r\n            <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n    </v-toolbar>\r\n    <v-data-table :headers=\"headers\" :items=\"dataPorts\" class=\"elevation-1\" dark hide-actions>\r\n      <template v-slot:items=\"props\">\r\n        <td>{{ props.item.name }}</td>\r\n        <td class=\"text-xs\">{{ props.item.value }}</td>\r\n        <td class=\"justify-center layout px-0\">\r\n          <v-icon\r\n            small\r\n            class=\"mr-2\"\r\n            @click=\"editItem(props.item)\"\r\n          >\r\n            edit\r\n          </v-icon>\r\n        </td>\r\n      </template>\r\n      <template v-slot:no-data>\r\n      <v-alert :value=\"true\" color=\"error\" icon=\"warning\">\r\n        Server is not Running ðŸ˜¢\r\n      </v-alert>\r\n    </template>\r\n    </v-data-table>\r\n    <v-alert dark :value=\"updateStatus\" transition=\"scale-transition\" type=\"success\">Ports Updated Successfully.</v-alert>\r\n    <br/>\r\n    <processor />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { mapGetters, mapActions } from \"vuex\";\r\n  import processor from \"./processor\";\r\n  export default {\r\n    data: () => ({\r\n      dialog: false,\r\n      headers: [\r\n        {\r\n          text: 'Ports',\r\n          align: 'left',\r\n          value: 'name',\r\n          sortable: false\r\n        },\r\n        {\r\n            text: 'Port Name / Path',\r\n            value: 'value',\r\n            sortable: false\r\n        }\r\n      ],\r\n      editedIndex: -1,\r\n      editedItem: {\r\n        value: ''\r\n      },\r\n      defaultItem: {\r\n        name: '',\r\n        value: ''\r\n      }\r\n    }),\r\n\r\n    computed:{\r\n      ...mapGetters(['dataPorts', 'availPort', 'updateStatus']),\r\n      formTitle () {\r\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Port'\r\n    }},\r\n\r\n    watch: {\r\n      dialog (val) {\r\n        val || this.close()\r\n      }\r\n    },\r\n\r\n    created () {\r\n      this.getPortdata();\r\n      this.getPortNumbers();\r\n    },\r\n\r\n    methods: {\r\n      ...mapActions([\"getPortdata\", \"getPortNumbers\", 'updatePortinfo']),\r\n\r\n      editItem (item) {\r\n        this.editedIndex = this.dataPorts.indexOf(item)\r\n        this.editedItem = Object.assign({}, item)\r\n        this.dialog = true\r\n      },\r\n\r\n      close () {\r\n        this.dialog = false\r\n        setTimeout(() => {\r\n          this.editedItem = Object.assign({}, this.defaultItem)\r\n          this.editedIndex = -1\r\n        }, 300)\r\n      },\r\n\r\n      save () {\r\n        if (this.editedIndex > -1) {\r\n          Object.assign(this.dataPorts[this.editedIndex], this.editedItem)\r\n        } else {\r\n          this.dataPorts.push(this.editedItem)\r\n        }\r\n        this.close()\r\n      }\r\n    },\r\n\r\n    components: {\r\n      processor\r\n    }\r\n  }\r\n</script>"]}]}