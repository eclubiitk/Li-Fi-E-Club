{"remainingRequest":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\src\\components\\fileUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\src\\components\\fileUploader.vue","mtime":1562140992966},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Utkarsh\\Desktop\\uiflifi\\lifi-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: 'fileUploader',\n  data: function data() {\n    return {\n      xval: false,\n      file: ''\n    };\n  },\n  methods: {\n    handleFileUpload: function handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n    },\n    beginTransfer: function beginTransfer() {\n      var formData = new FormData();\n      formData.append('filetoupload', this.file);\n      axios.post('http://localhost:30000/transmit', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (response) {\n        alert(\"Transmission Successful\");\n      }).catch(function () {\n        alert('Either the file is damaged or Server is not running.');\n      });\n    }\n  }\n};",{"version":3,"sources":["fileUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,cAAA,EAAA,KAAA,IAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,iCAAA,EACA,QADA,EAEA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA;AADA;AADA,OAFA,EAMA,IANA,CAMA,UAAA,QAAA,EAAA;AAAA,QAAA,KAAA,CAAA,yBAAA,CAAA;AAAA,OANA,EAMA,KANA,CAMA,YAAA;AAAA,QAAA,KAAA,CAAA,sDAAA,CAAA;AAAA,OANA;AAOA;AAdA;AATA,CAAA","sourcesContent":["<template>\r\n  <v-layout row justify-center>\r\n    <v-btn fab dark small color=\"green\">\r\n      <v-icon @click.stop=\"xval = true\">cloud_upload</v-icon>\r\n    </v-btn>\r\n    <v-dialog v-model=\"xval\" persistent max-width=\"600\">\r\n      <v-card dark>\r\n        <v-card-title>\r\n          <span class=\"headline\">Transmission Panel</span>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <v-container grid-list-md>\r\n            <v-layout wrap>\r\n              <v-flex>\r\n                <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\r\n              </v-flex>\r\n            </v-layout>\r\n          </v-container>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn color=\"blue darken-1\" flat @click=\"xval = false\">Cancel</v-btn>\r\n          <v-btn color=\"blue darken-1\" flat @click=\"beginTransfer\">Begin Transmission</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\n  import axios from \"axios\";\r\n  export default {\r\n    name: 'fileUploader',\r\n    data () {\r\n      return {\r\n        xval: false,\r\n        file:''\r\n      }\r\n    },\r\n\r\n    methods : {\r\n      handleFileUpload(){\r\n        this.file = this.$refs.file.files[0]\r\n      },\r\n      beginTransfer(){\r\n        let formData = new FormData();\r\n        formData.append('filetoupload', this.file);\r\n        axios.post( 'http://localhost:30000/transmit',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        }).then(function(response){alert(\"Transmission Successful\")}).catch(function(){alert('Either the file is damaged or Server is not running.');});\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components"}]}